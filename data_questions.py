

data_questions = ["What is the goal of HDFS?",
                  "What is a relational model?",
                  "Describe the combiner phase of MapReduce?",
                  "What documents does simple\nmatching retrieve first?",
                  "What are the benefits of noSQL?",
                  "How can we measure distance\nin vector-space?",
                  "When would you use a boolean retrieval\nmodel?",
                  "What is MapReduce?",
                  "Describe some problems of\nsimple matching?",
                  "Describe cosine matching?",
                  "What is the Apache foundation?",
                  "What is the default block size in HDFS?",
                  "Name a well-known framework\nthat uses mapreduce?",
                  "How can we model relationships\nthat connect entities in data?",
                  "What is polyglot persistence?",
                  "Describe efficient concurrent access?",
                  "What is the schema of a relation?",
                  "What is a database?",
                  "What is a database management\nsystem(DBMS) for?",
                  "Describe the levels of\ndatabase application?",
                  "What is the process of tokenisation?",
                  "What is stopword removal?",
                  "What are the information retrieval\nsearch stages?",
                  "What type of distribution do words\nexhibit across documents?",
                  "What is stemming?",
                  "Describe a retrieval model?",
                  "What is NoSQL?",
                  "Describe the vectors\nin a vector-space model?",
                  "What is the TFIDF formula?",
                  "How is a search system developed?",
                  "Describe the input phase\nof MapReduce?",
                  "Benefits of a centralised \ndata adminstration(DBA)?",
                  "What are the properties of a relation?",
                  "What are the phases of MapReduce?",
                  "What is the term frequency forumla?",
                  "What are the characteristics\nof Best Match Retrieval?",
                  "What are some disadvantages\nof traditional databases?",
                  "Name two popular retrieval models?",
                  "How is simple matching calculated?",
                  "What is the inverse\ndocument frequency formula?",
                  "What is CAP theorem?",
                  "What is the goal of indexing\nand obtaining data?",
                  "What are the advantages of Hadoop?",
                  "Data Cards Finished...\nClick next card to go back to the start..."]

data_answers = ["Fault detection and recovery.\n\nWork with huge datasets.",
                "Describes data as relations.\n\nDefines a set of high-level\noperations.\n\nNo physical pointers\n(hidden implementation).\n\ncAccessed and modified by SQL.",
                "This is an optional phase.\n\nA type of local reducer that groups\nsimilar data.\n\nTakes keys from mapper as input.",
                "Those that have more terms in\ncommon with the query.\n\nThose that share higher weighted\nterms (IDF).\n\nThose that contain more occurences\nof query terms.",
                "Scales better.\n\nDoesn't require a fixed\ndatabase schema.\n\nData hep in similiar structure\nto hash tables.",
                "Simple matching\n& the cosine co-efficient.",
                "When you require very precise lookups.",
                "MapReduce divides tasks into small\nparts & assigns them to\nmultiple computers.\n\nResults are then collected at\none place and combined to form\nan answer.",
                "More likely to retrieve long documents.\n\nLong documents contain more occurrences of terms.",
                "Matches the angle between vectors.",
                "Decentralised community of open-source\ndevelopers.\n\nThey develop open-source\ntechnologies & tools.",
                "64MB, but can be increased as needed.",
                "Hadoop - Distributed processing of large\ndata across clusters\nof CPU nodes.",
                "We can employ graph abstraction \nfor representing connectivity.",
                "Using different data storage technologies\nto handle varying storage needs\n\nApplications can talk to different\ndatabases.",
                "Transactions dont interfere with\neach other.\n\nResources may be scaled according\nto access needs.",
                "The name of the relation\ntogether with a set of attributes\n\n(Employee(emp_id, name, ...)",
                "An organised collection of data\nthat exists over a longer period of time.\n\n(known as persistent data).",
                "Providing access to the database.\n\nCreating the database.\nand specifying its structure.\n\nMaintaining the database.\n\nControlling access.",
                "Convert data to a stream of tokens.\n\nLose all punctuation.\n\nLose all structure.\n\nlose all context.",
                "Remove words that are poor descriptors.\n\nCreated in advance.\n\nBased on statistical word frequency.",
                "Obtain data.\n\nIndex data.\n\nObtain query.\n\nMatch documents to query.\n\nPresent to user.",
                "A zipfian distribution.",
                "Reduces word to their stems\nby recognising a common concept\n between parts of speech.\n\nReduces processing time.",
                "A retrieval model matches a query\nto a particular document.",
                "Incorporates a wide range of\ndatabase technologies.\n\nCopes with high-frequency access.\n\nScalable, AGILE form of data storage. ",
                "Documents are represented\nas vectors.\n\nVectors define a position in space.\n\nNo.ofAxes=Num.of.word in collection",
                "TFIDF= IDF(term) * TF(doc/term)",
                "Concentrating on data indexing\n& matching queries to documents.",
                "Reads in data and generates\nkey-value pairs.\n\nDivides into appopriate sizes.\n\nFramework assigns one split\nto each map function.",
                "DBA can make decisions about database.\n\nReduced application development time.",
                "A relation has a unique name.\n\nOne atomic value in each field.\n\nEach field must be elementary type.",
                "Input\nMap\nCombine\nShuffle & Sort\nReduce\nOutput",
                "TF = Number of time term occurs\n/ Total number of docments",
                "Output is ranked according\nto how close it matches query\n\nEasier to interpret results\n\nFirst displayed document most\nlikely to be relevant",
                "Costly (Â£47k +)\n\nScaling\n\nCost of Conversion\n\nData redundancy",
                "The boolean model &\nthe vector-space model",
                "The sum of\nQuery term weight * document term weight",
                "IDF = log(Number of docs in collection\n/ Num of doc descriptions\ncontaining term (t)",
                "Consistency - Every read\nreceives the most recent error\n\nAvailability - Every request\nreceives a response\n\nParition Tolerance - Network continues\ndepsite nodes dropping data",
                "To give good descriptions of\ndocument contents\n\nIt helps discriminate\ndocuments from each other",
                "Quickly written & tested systems\n\nUtilises Parallelism\n\nCross-Platform Compatability",
                "I said click next card, not answer! ;)"]